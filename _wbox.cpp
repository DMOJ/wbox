/* Generated by Cython 0.24 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "define_macros": [
            [
                "UNICODE", 
                null
            ]
        ], 
        "depends": [
            "dmoj\\wbox\\firewall.h", 
            "dmoj\\wbox\\helpers.h", 
            "dmoj\\wbox\\process.h", 
            "dmoj\\wbox\\user.h"
        ], 
        "language": "c++", 
        "libraries": [
            "netapi32", 
            "advapi32", 
            "ole32"
        ]
    }
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_24"
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if !defined(CYTHON_USE_PYLONG_INTERNALS) && CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x02070000
  #define CYTHON_USE_PYLONG_INTERNALS 1
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if PY_VERSION_HEX >= 0x030500B1
#define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
#define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
typedef struct {
    unaryfunc am_await;
    unaryfunc am_aiter;
    unaryfunc am_anext;
} __Pyx_PyAsyncMethodsStruct;
#define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
#else
#define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #define CYTHON_INLINE inline
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__dmoj__wbox___wbox
#define __PYX_HAVE_API__dmoj__wbox___wbox
#include "windows.h"
#include "helpers.h"
#include "user.h"
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include "process.h"
#include "firewall.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER) && defined (_M_X64)
    #define __Pyx_sst_abs(value) _abs64(value)
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "dmoj\\wbox\\_wbox.pyx",
};

/* "dmoj/wbox/_wbox.pyx":10
 * ctypedef char *LPSTR
 * ctypedef void *HANDLE
 * ctypedef unsigned long DWORD             # <<<<<<<<<<<<<<
 * 
 * 
 */
typedef unsigned long __pyx_t_4dmoj_4wbox_5_wbox_DWORD;

/*--- Type declarations ---*/
struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager;
struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager;
struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager;

/* "dmoj/wbox/_wbox.pyx":5
 * from msvcrt import open_osfhandle
 * 
 * ctypedef const Py_UNICODE *LPCWSTR             # <<<<<<<<<<<<<<
 * ctypedef Py_UNICODE *LPWSTR
 * ctypedef const char *LPCSTR
 */
typedef Py_UNICODE const *__pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR;

/* "dmoj/wbox/_wbox.pyx":6
 * 
 * ctypedef const Py_UNICODE *LPCWSTR
 * ctypedef Py_UNICODE *LPWSTR             # <<<<<<<<<<<<<<
 * ctypedef const char *LPCSTR
 * ctypedef char *LPSTR
 */
typedef Py_UNICODE *__pyx_t_4dmoj_4wbox_5_wbox_LPWSTR;

/* "dmoj/wbox/_wbox.pyx":7
 * ctypedef const Py_UNICODE *LPCWSTR
 * ctypedef Py_UNICODE *LPWSTR
 * ctypedef const char *LPCSTR             # <<<<<<<<<<<<<<
 * ctypedef char *LPSTR
 * ctypedef void *HANDLE
 */
typedef char const *__pyx_t_4dmoj_4wbox_5_wbox_LPCSTR;

/* "dmoj/wbox/_wbox.pyx":8
 * ctypedef Py_UNICODE *LPWSTR
 * ctypedef const char *LPCSTR
 * ctypedef char *LPSTR             # <<<<<<<<<<<<<<
 * ctypedef void *HANDLE
 * ctypedef unsigned long DWORD
 */
typedef char *__pyx_t_4dmoj_4wbox_5_wbox_LPSTR;

/* "dmoj/wbox/_wbox.pyx":9
 * ctypedef const char *LPCSTR
 * ctypedef char *LPSTR
 * ctypedef void *HANDLE             # <<<<<<<<<<<<<<
 * ctypedef unsigned long DWORD
 * 
 */
typedef void *__pyx_t_4dmoj_4wbox_5_wbox_HANDLE;

/* "dmoj/wbox/_wbox.pyx":87
 * 
 * 
 * cdef class UserManager:             # <<<<<<<<<<<<<<
 *     cdef CUserManager *thisptr
 * 
 */
struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager {
  PyObject_HEAD
  UserManager *thisptr;
};


/* "dmoj/wbox/_wbox.pyx":125
 *             return self.thisptr.password()
 * 
 * cdef class NetworkManager:             # <<<<<<<<<<<<<<
 *     cdef CNetworkManager *thisptr
 *     cdef unicode _name, _executable
 */
struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager {
  PyObject_HEAD
  NetworkManager *thisptr;
  PyObject *_name;
  PyObject *_executable;
};


/* "dmoj/wbox/_wbox.pyx":165
 *             return self._executable
 * 
 * cdef class ProcessManager:             # <<<<<<<<<<<<<<
 *     cdef JobbedProcessManager *thisptr
 *     cdef double _time_limit
 */
struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager {
  PyObject_HEAD
  JobbedProcessManager *thisptr;
  double _time_limit;
  size_t _memory_limit;
  int _process_limit;
  PyObject *_username;
  PyObject *_password;
  PyObject *_executable;
  PyObject *_command;
  PyObject *_dir;
  PyObject *_inject32;
  PyObject *_inject64;
  PyObject *_inject_func;
  PyObject *_stdin;
  PyObject *_stdout;
  PyObject *_stderr;
};


/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = PyThreadState_GET();
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* GetModuleGlobalName.proto */
static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

/* ArgTypeTest.proto */
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_PY_LONG_LONG(unsigned PY_LONG_LONG value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_long(unsigned long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE unsigned long __Pyx_PyInt_As_unsigned_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'dmoj.wbox._wbox' */
static PyTypeObject *__pyx_ptype_4dmoj_4wbox_5_wbox_UserManager = 0;
static PyTypeObject *__pyx_ptype_4dmoj_4wbox_5_wbox_NetworkManager = 0;
static PyTypeObject *__pyx_ptype_4dmoj_4wbox_5_wbox_ProcessManager = 0;
static PyObject *__pyx_f_4dmoj_4wbox_5_wbox_update_address_x86(PyObject *, int __pyx_skip_dispatch); /*proto*/
static PyObject *__pyx_f_4dmoj_4wbox_5_wbox_update_address_x64(PyObject *, int __pyx_skip_dispatch); /*proto*/
#define __Pyx_MODULE_NAME "dmoj.wbox._wbox"
int __pyx_module_is_main_dmoj__wbox___wbox = 0;

/* Implementation of 'dmoj.wbox._wbox' */
static PyObject *__pyx_builtin_ValueError;
static const char __pyx_k_r[] = "r";
static const char __pyx_k_w[] = "w";
static const char __pyx_k__7[] = "";
static const char __pyx_k_os[] = "os";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mbcs[] = "mbcs";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_ctypes[] = "ctypes";
static const char __pyx_k_decode[] = "decode";
static const char __pyx_k_exc_tb[] = "exc_tb";
static const char __pyx_k_fdopen[] = "fdopen";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_msvcrt[] = "msvcrt";
static const char __pyx_k_dispose[] = "dispose";
static const char __pyx_k_exc_val[] = "exc_val";
static const char __pyx_k_timeout[] = "timeout";
static const char __pyx_k_O_RDONLY[] = "O_RDONLY";
static const char __pyx_k_O_WRONLY[] = "O_WRONLY";
static const char __pyx_k_WinError[] = "WinError";
static const char __pyx_k_exc_type[] = "exc_type";
static const char __pyx_k_password[] = "password";
static const char __pyx_k_username[] = "username";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_executable[] = "executable";
static const char __pyx_k_open_osfhandle[] = "open_osfhandle";
static const char __pyx_k_already_destroyed[] = "already destroyed";
static PyObject *__pyx_n_s_O_RDONLY;
static PyObject *__pyx_n_s_O_WRONLY;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_WinError;
static PyObject *__pyx_kp_u__7;
static PyObject *__pyx_kp_s_already_destroyed;
static PyObject *__pyx_n_s_ctypes;
static PyObject *__pyx_n_s_decode;
static PyObject *__pyx_n_s_dispose;
static PyObject *__pyx_n_s_exc_tb;
static PyObject *__pyx_n_s_exc_type;
static PyObject *__pyx_n_s_exc_val;
static PyObject *__pyx_n_s_executable;
static PyObject *__pyx_n_s_fdopen;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_mbcs;
static PyObject *__pyx_n_s_msvcrt;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_open_osfhandle;
static PyObject *__pyx_n_s_os;
static PyObject *__pyx_n_s_password;
static PyObject *__pyx_n_s_r;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_timeout;
static PyObject *__pyx_n_s_username;
static PyObject *__pyx_n_s_w;
static int __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager___cinit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self, PyObject *__pyx_v_username, PyObject *__pyx_v_password); /* proto */
static void __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_2__dealloc__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_4dispose(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_6__enter__(CYTHON_UNUSED struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8__exit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8username___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8password___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager___cinit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_executable); /* proto */
static void __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_2__dealloc__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_4dispose(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_6__enter__(CYTHON_UNUSED struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_8__exit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_4name___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_10executable___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager___cinit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_username, PyObject *__pyx_v_password); /* proto */
static void __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_2__dealloc__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_4spawn(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6terminate(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_code); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8wait(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_timeout); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10get_exit_code(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12set_environment(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_memory); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_14inherit_environment(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_5stdin___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6stdout___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6stderr___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10executable___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7command___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7command_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3dir___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8username___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8username_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8password___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8password_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6memory___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3mle___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_14execution_time___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3tle___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7_handle___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_update_address_x86(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_executable); /* proto */
static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_2update_address_x64(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_executable); /* proto */
static PyObject *__pyx_tp_new_4dmoj_4wbox_5_wbox_UserManager(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4dmoj_4wbox_5_wbox_NetworkManager(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_4dmoj_4wbox_5_wbox_ProcessManager(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tuple_;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;

/* "dmoj/wbox/_wbox.pyx":90
 *     cdef CUserManager *thisptr
 * 
 *     def __cinit__(self, username=None, password=None):             # <<<<<<<<<<<<<<
 *         if username is not None and password is not None:
 *             self.thisptr = new CUserManager(username, password)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_username = 0;
  PyObject *__pyx_v_password = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_username,&__pyx_n_s_password,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_username);
          if (value) { values[0] = value; kw_args--; }
        }
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_password);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 90, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_username = values[0];
    __pyx_v_password = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 90, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.UserManager.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager___cinit__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *)__pyx_v_self), __pyx_v_username, __pyx_v_password);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager___cinit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self, PyObject *__pyx_v_username, PyObject *__pyx_v_password) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_4;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_5;
  UserManager *__pyx_t_6;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "dmoj/wbox/_wbox.pyx":91
 * 
 *     def __cinit__(self, username=None, password=None):
 *         if username is not None and password is not None:             # <<<<<<<<<<<<<<
 *             self.thisptr = new CUserManager(username, password)
 *         elif username is not None:
 */
  __pyx_t_2 = (__pyx_v_username != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (__pyx_v_password != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":92
 *     def __cinit__(self, username=None, password=None):
 *         if username is not None and password is not None:
 *             self.thisptr = new CUserManager(username, password)             # <<<<<<<<<<<<<<
 *         elif username is not None:
 *             self.thisptr = new CUserManager(username)
 */
    __pyx_t_4 = __Pyx_PyUnicode_AsUnicode(__pyx_v_username); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 92, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyUnicode_AsUnicode(__pyx_v_password); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(0, 92, __pyx_L1_error)
    try {
      __pyx_t_6 = new UserManager(__pyx_t_4, __pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 92, __pyx_L1_error)
    }
    __pyx_v_self->thisptr = __pyx_t_6;

    /* "dmoj/wbox/_wbox.pyx":91
 * 
 *     def __cinit__(self, username=None, password=None):
 *         if username is not None and password is not None:             # <<<<<<<<<<<<<<
 *             self.thisptr = new CUserManager(username, password)
 *         elif username is not None:
 */
    goto __pyx_L3;
  }

  /* "dmoj/wbox/_wbox.pyx":93
 *         if username is not None and password is not None:
 *             self.thisptr = new CUserManager(username, password)
 *         elif username is not None:             # <<<<<<<<<<<<<<
 *             self.thisptr = new CUserManager(username)
 *         else:
 */
  __pyx_t_1 = (__pyx_v_username != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "dmoj/wbox/_wbox.pyx":94
 *             self.thisptr = new CUserManager(username, password)
 *         elif username is not None:
 *             self.thisptr = new CUserManager(username)             # <<<<<<<<<<<<<<
 *         else:
 *             self.thisptr = new CUserManager()
 */
    __pyx_t_5 = __Pyx_PyUnicode_AsUnicode(__pyx_v_username); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(0, 94, __pyx_L1_error)
    try {
      __pyx_t_6 = new UserManager(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 94, __pyx_L1_error)
    }
    __pyx_v_self->thisptr = __pyx_t_6;

    /* "dmoj/wbox/_wbox.pyx":93
 *         if username is not None and password is not None:
 *             self.thisptr = new CUserManager(username, password)
 *         elif username is not None:             # <<<<<<<<<<<<<<
 *             self.thisptr = new CUserManager(username)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "dmoj/wbox/_wbox.pyx":96
 *             self.thisptr = new CUserManager(username)
 *         else:
 *             self.thisptr = new CUserManager()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  /*else*/ {
    try {
      __pyx_t_6 = new UserManager();
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 96, __pyx_L1_error)
    }
    __pyx_v_self->thisptr = __pyx_t_6;
  }
  __pyx_L3:;

  /* "dmoj/wbox/_wbox.pyx":90
 *     cdef CUserManager *thisptr
 * 
 *     def __cinit__(self, username=None, password=None):             # <<<<<<<<<<<<<<
 *         if username is not None and password is not None:
 *             self.thisptr = new CUserManager(username, password)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.UserManager.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":98
 *             self.thisptr = new CUserManager()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_2__dealloc__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_2__dealloc__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "dmoj/wbox/_wbox.pyx":99
 * 
 *     def __dealloc__(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = (__pyx_v_self->thisptr != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":100
 *     def __dealloc__(self):
 *         if self.thisptr:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def dispose(self):
 */
    delete __pyx_v_self->thisptr;

    /* "dmoj/wbox/_wbox.pyx":99
 * 
 *     def __dealloc__(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "dmoj/wbox/_wbox.pyx":98
 *             self.thisptr = new CUserManager()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "dmoj/wbox/_wbox.pyx":102
 *             del self.thisptr
 * 
 *     def dispose(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_5dispose(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_5dispose(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dispose (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_4dispose(((struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_4dispose(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("dispose", 0);

  /* "dmoj/wbox/_wbox.pyx":103
 * 
 *     def dispose(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 *             self.thisptr = NULL
 */
  __pyx_t_1 = (__pyx_v_self->thisptr != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":104
 *     def dispose(self):
 *         if self.thisptr:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 *             self.thisptr = NULL
 * 
 */
    delete __pyx_v_self->thisptr;

    /* "dmoj/wbox/_wbox.pyx":105
 *         if self.thisptr:
 *             del self.thisptr
 *             self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __enter__(self):
 */
    __pyx_v_self->thisptr = NULL;

    /* "dmoj/wbox/_wbox.pyx":103
 * 
 *     def dispose(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 *             self.thisptr = NULL
 */
  }

  /* "dmoj/wbox/_wbox.pyx":102
 *             del self.thisptr
 * 
 *     def dispose(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":107
 *             self.thisptr = NULL
 * 
 *     def __enter__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_7__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_7__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__enter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_6__enter__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_6__enter__(CYTHON_UNUSED struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__enter__", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":110
 *         pass
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):             # <<<<<<<<<<<<<<
 *         self.dispose()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_9__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_9__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_exc_type = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_val = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_tb = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__exit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_exc_type,&__pyx_n_s_exc_val,&__pyx_n_s_exc_tb,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_val)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 1); __PYX_ERR(0, 110, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_tb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 2); __PYX_ERR(0, 110, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__exit__") < 0)) __PYX_ERR(0, 110, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_exc_type = values[0];
    __pyx_v_exc_val = values[1];
    __pyx_v_exc_tb = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 110, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.UserManager.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8__exit__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *)__pyx_v_self), __pyx_v_exc_type, __pyx_v_exc_val, __pyx_v_exc_tb);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8__exit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__exit__", 0);

  /* "dmoj/wbox/_wbox.pyx":111
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):
 *         self.dispose()             # <<<<<<<<<<<<<<
 * 
 *     property username:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dispose); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":110
 *         pass
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):             # <<<<<<<<<<<<<<
 *         self.dispose()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("dmoj.wbox._wbox.UserManager.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":114
 * 
 *     property username:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_8username_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_8username_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8username___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8username___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":115
 *     property username:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self.thisptr.username()
 */
  __pyx_t_1 = ((!(__pyx_v_self->thisptr != 0)) != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":116
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self.thisptr.username()
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 116, __pyx_L1_error)

    /* "dmoj/wbox/_wbox.pyx":115
 *     property username:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self.thisptr.username()
 */
  }

  /* "dmoj/wbox/_wbox.pyx":117
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 *             return self.thisptr.username()             # <<<<<<<<<<<<<<
 * 
 *     property password:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyUnicode_FromUnicode(__pyx_v_self->thisptr->username()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":114
 * 
 *     property username:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("dmoj.wbox._wbox.UserManager.username.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":120
 * 
 *     property password:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_8password_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_8password_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8password___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_11UserManager_8password___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":121
 *     property password:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self.thisptr.password()
 */
  __pyx_t_1 = ((!(__pyx_v_self->thisptr != 0)) != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":122
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self.thisptr.password()
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 122, __pyx_L1_error)

    /* "dmoj/wbox/_wbox.pyx":121
 *     property password:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self.thisptr.password()
 */
  }

  /* "dmoj/wbox/_wbox.pyx":123
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 *             return self.thisptr.password()             # <<<<<<<<<<<<<<
 * 
 * cdef class NetworkManager:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyUnicode_FromUnicode(__pyx_v_self->thisptr->password()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":120
 * 
 *     property password:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("dmoj.wbox._wbox.UserManager.password.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":129
 *     cdef unicode _name, _executable
 * 
 *     def __cinit__(self, name, executable):             # <<<<<<<<<<<<<<
 *         if not isinstance(name, unicode):
 *             name = name.decode('mbcs')
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_executable = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_executable,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_executable)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 129, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 129, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_name = values[0];
    __pyx_v_executable = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 129, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.NetworkManager.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager___cinit__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)__pyx_v_self), __pyx_v_name, __pyx_v_executable);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager___cinit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_executable) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_5;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_6;
  NetworkManager *__pyx_t_7;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF(__pyx_v_name);
  __Pyx_INCREF(__pyx_v_executable);

  /* "dmoj/wbox/_wbox.pyx":130
 * 
 *     def __cinit__(self, name, executable):
 *         if not isinstance(name, unicode):             # <<<<<<<<<<<<<<
 *             name = name.decode('mbcs')
 *         if not isinstance(executable, unicode):
 */
  __pyx_t_1 = PyUnicode_Check(__pyx_v_name); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "dmoj/wbox/_wbox.pyx":131
 *     def __cinit__(self, name, executable):
 *         if not isinstance(name, unicode):
 *             name = name.decode('mbcs')             # <<<<<<<<<<<<<<
 *         if not isinstance(executable, unicode):
 *             executable = executable.decode('mbcs')
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_name, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_name, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "dmoj/wbox/_wbox.pyx":130
 * 
 *     def __cinit__(self, name, executable):
 *         if not isinstance(name, unicode):             # <<<<<<<<<<<<<<
 *             name = name.decode('mbcs')
 *         if not isinstance(executable, unicode):
 */
  }

  /* "dmoj/wbox/_wbox.pyx":132
 *         if not isinstance(name, unicode):
 *             name = name.decode('mbcs')
 *         if not isinstance(executable, unicode):             # <<<<<<<<<<<<<<
 *             executable = executable.decode('mbcs')
 *         self._name = name
 */
  __pyx_t_2 = PyUnicode_Check(__pyx_v_executable); 
  __pyx_t_1 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":133
 *             name = name.decode('mbcs')
 *         if not isinstance(executable, unicode):
 *             executable = executable.decode('mbcs')             # <<<<<<<<<<<<<<
 *         self._name = name
 *         self._executable = executable
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_executable, __pyx_n_s_decode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_executable, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "dmoj/wbox/_wbox.pyx":132
 *         if not isinstance(name, unicode):
 *             name = name.decode('mbcs')
 *         if not isinstance(executable, unicode):             # <<<<<<<<<<<<<<
 *             executable = executable.decode('mbcs')
 *         self._name = name
 */
  }

  /* "dmoj/wbox/_wbox.pyx":134
 *         if not isinstance(executable, unicode):
 *             executable = executable.decode('mbcs')
 *         self._name = name             # <<<<<<<<<<<<<<
 *         self._executable = executable
 *         self.thisptr = new CNetworkManager(name, executable)
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(0, 134, __pyx_L1_error)
  __pyx_t_3 = __pyx_v_name;
  __Pyx_INCREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_name);
  __Pyx_DECREF(__pyx_v_self->_name);
  __pyx_v_self->_name = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "dmoj/wbox/_wbox.pyx":135
 *             executable = executable.decode('mbcs')
 *         self._name = name
 *         self._executable = executable             # <<<<<<<<<<<<<<
 *         self.thisptr = new CNetworkManager(name, executable)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_executable))||((__pyx_v_executable) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_executable)->tp_name), 0))) __PYX_ERR(0, 135, __pyx_L1_error)
  __pyx_t_3 = __pyx_v_executable;
  __Pyx_INCREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_executable);
  __Pyx_DECREF(__pyx_v_self->_executable);
  __pyx_v_self->_executable = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "dmoj/wbox/_wbox.pyx":136
 *         self._name = name
 *         self._executable = executable
 *         self.thisptr = new CNetworkManager(name, executable)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_5 = __Pyx_PyUnicode_AsUnicode(__pyx_v_name); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(0, 136, __pyx_L1_error)
  __pyx_t_6 = __Pyx_PyUnicode_AsUnicode(__pyx_v_executable); if (unlikely((!__pyx_t_6) && PyErr_Occurred())) __PYX_ERR(0, 136, __pyx_L1_error)
  try {
    __pyx_t_7 = new NetworkManager(__pyx_t_5, __pyx_t_6);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 136, __pyx_L1_error)
  }
  __pyx_v_self->thisptr = __pyx_t_7;

  /* "dmoj/wbox/_wbox.pyx":129
 *     cdef unicode _name, _executable
 * 
 *     def __cinit__(self, name, executable):             # <<<<<<<<<<<<<<
 *         if not isinstance(name, unicode):
 *             name = name.decode('mbcs')
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("dmoj.wbox._wbox.NetworkManager.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_executable);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":138
 *         self.thisptr = new CNetworkManager(name, executable)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_2__dealloc__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_2__dealloc__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "dmoj/wbox/_wbox.pyx":139
 * 
 *     def __dealloc__(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  __pyx_t_1 = (__pyx_v_self->thisptr != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":140
 *     def __dealloc__(self):
 *         if self.thisptr:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def dispose(self):
 */
    delete __pyx_v_self->thisptr;

    /* "dmoj/wbox/_wbox.pyx":139
 * 
 *     def __dealloc__(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  }

  /* "dmoj/wbox/_wbox.pyx":138
 *         self.thisptr = new CNetworkManager(name, executable)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "dmoj/wbox/_wbox.pyx":142
 *             del self.thisptr
 * 
 *     def dispose(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_5dispose(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_5dispose(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dispose (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_4dispose(((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_4dispose(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("dispose", 0);

  /* "dmoj/wbox/_wbox.pyx":143
 * 
 *     def dispose(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 *             self.thisptr = NULL
 */
  __pyx_t_1 = (__pyx_v_self->thisptr != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":144
 *     def dispose(self):
 *         if self.thisptr:
 *             del self.thisptr             # <<<<<<<<<<<<<<
 *             self.thisptr = NULL
 * 
 */
    delete __pyx_v_self->thisptr;

    /* "dmoj/wbox/_wbox.pyx":145
 *         if self.thisptr:
 *             del self.thisptr
 *             self.thisptr = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __enter__(self):
 */
    __pyx_v_self->thisptr = NULL;

    /* "dmoj/wbox/_wbox.pyx":143
 * 
 *     def dispose(self):
 *         if self.thisptr:             # <<<<<<<<<<<<<<
 *             del self.thisptr
 *             self.thisptr = NULL
 */
  }

  /* "dmoj/wbox/_wbox.pyx":142
 *             del self.thisptr
 * 
 *     def dispose(self):             # <<<<<<<<<<<<<<
 *         if self.thisptr:
 *             del self.thisptr
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":147
 *             self.thisptr = NULL
 * 
 *     def __enter__(self):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_7__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_7__enter__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__enter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_6__enter__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_6__enter__(CYTHON_UNUSED struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__enter__", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":150
 *         pass
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):             # <<<<<<<<<<<<<<
 *         self.dispose()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_9__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_9__exit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_exc_type = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_val = 0;
  CYTHON_UNUSED PyObject *__pyx_v_exc_tb = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__exit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_exc_type,&__pyx_n_s_exc_val,&__pyx_n_s_exc_tb,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_val)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 1); __PYX_ERR(0, 150, __pyx_L3_error)
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_exc_tb)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, 2); __PYX_ERR(0, 150, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__exit__") < 0)) __PYX_ERR(0, 150, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_exc_type = values[0];
    __pyx_v_exc_val = values[1];
    __pyx_v_exc_tb = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__exit__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 150, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.NetworkManager.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_8__exit__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)__pyx_v_self), __pyx_v_exc_type, __pyx_v_exc_val, __pyx_v_exc_tb);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_8__exit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_exc_type, CYTHON_UNUSED PyObject *__pyx_v_exc_val, CYTHON_UNUSED PyObject *__pyx_v_exc_tb) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("__exit__", 0);

  /* "dmoj/wbox/_wbox.pyx":151
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):
 *         self.dispose()             # <<<<<<<<<<<<<<
 * 
 *     property name:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_dispose); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  if (__pyx_t_3) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 151, __pyx_L1_error)
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":150
 *         pass
 * 
 *     def __exit__(self, exc_type, exc_val, exc_tb):             # <<<<<<<<<<<<<<
 *         self.dispose()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("dmoj.wbox._wbox.NetworkManager.__exit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":154
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_4name___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_4name___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":155
 *     property name:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self._name
 */
  __pyx_t_1 = ((!(__pyx_v_self->thisptr != 0)) != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":156
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self._name
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 156, __pyx_L1_error)

    /* "dmoj/wbox/_wbox.pyx":155
 *     property name:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self._name
 */
  }

  /* "dmoj/wbox/_wbox.pyx":157
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 *             return self._name             # <<<<<<<<<<<<<<
 * 
 *     property executable:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_name);
  __pyx_r = __pyx_v_self->_name;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":154
 * 
 *     property name:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("dmoj.wbox._wbox.NetworkManager.name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":160
 * 
 *     property executable:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_10executable_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_10executable_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_10executable___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14NetworkManager_10executable___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":161
 *     property executable:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self._executable
 */
  __pyx_t_1 = ((!(__pyx_v_self->thisptr != 0)) != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":162
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self._executable
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 162, __pyx_L1_error)

    /* "dmoj/wbox/_wbox.pyx":161
 *     property executable:
 *         def __get__(self):
 *             if not self.thisptr:             # <<<<<<<<<<<<<<
 *                 raise ValueError('already destroyed')
 *             return self._executable
 */
  }

  /* "dmoj/wbox/_wbox.pyx":163
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 *             return self._executable             # <<<<<<<<<<<<<<
 * 
 * cdef class ProcessManager:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_executable);
  __pyx_r = __pyx_v_self->_executable;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":160
 * 
 *     property executable:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("dmoj.wbox._wbox.NetworkManager.executable.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":180
 *     cdef object _stdin, _stdout, _stderr
 * 
 *     def __cinit__(self, username, password):             # <<<<<<<<<<<<<<
 *         self.thisptr = new JobbedProcessManager()
 *         self._time_limit = 0
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_username = 0;
  PyObject *__pyx_v_password = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_username,&__pyx_n_s_password,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_username)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_password)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, 1); __PYX_ERR(0, 180, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(0, 180, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_username = values[0];
    __pyx_v_password = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 180, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager___cinit__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), __pyx_v_username, __pyx_v_password);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager___cinit__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_username, PyObject *__pyx_v_password) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  JobbedProcessManager *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_3;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_4;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "dmoj/wbox/_wbox.pyx":181
 * 
 *     def __cinit__(self, username, password):
 *         self.thisptr = new JobbedProcessManager()             # <<<<<<<<<<<<<<
 *         self._time_limit = 0
 *         self._memory_limit = 0
 */
  try {
    __pyx_t_1 = new JobbedProcessManager();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 181, __pyx_L1_error)
  }
  __pyx_v_self->thisptr = __pyx_t_1;

  /* "dmoj/wbox/_wbox.pyx":182
 *     def __cinit__(self, username, password):
 *         self.thisptr = new JobbedProcessManager()
 *         self._time_limit = 0             # <<<<<<<<<<<<<<
 *         self._memory_limit = 0
 *         self._process_limit = 0
 */
  __pyx_v_self->_time_limit = 0.0;

  /* "dmoj/wbox/_wbox.pyx":183
 *         self.thisptr = new JobbedProcessManager()
 *         self._time_limit = 0
 *         self._memory_limit = 0             # <<<<<<<<<<<<<<
 *         self._process_limit = 0
 *         self._username = username
 */
  __pyx_v_self->_memory_limit = 0;

  /* "dmoj/wbox/_wbox.pyx":184
 *         self._time_limit = 0
 *         self._memory_limit = 0
 *         self._process_limit = 0             # <<<<<<<<<<<<<<
 *         self._username = username
 *         self._password = password
 */
  __pyx_v_self->_process_limit = 0;

  /* "dmoj/wbox/_wbox.pyx":185
 *         self._memory_limit = 0
 *         self._process_limit = 0
 *         self._username = username             # <<<<<<<<<<<<<<
 *         self._password = password
 *         self._executable = self._dir = u''
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_username))||((__pyx_v_username) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_username)->tp_name), 0))) __PYX_ERR(0, 185, __pyx_L1_error)
  __pyx_t_2 = __pyx_v_username;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_username);
  __Pyx_DECREF(__pyx_v_self->_username);
  __pyx_v_self->_username = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "dmoj/wbox/_wbox.pyx":186
 *         self._process_limit = 0
 *         self._username = username
 *         self._password = password             # <<<<<<<<<<<<<<
 *         self._executable = self._dir = u''
 *         self._inject32 = self._inject64 = None
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_password))||((__pyx_v_password) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_password)->tp_name), 0))) __PYX_ERR(0, 186, __pyx_L1_error)
  __pyx_t_2 = __pyx_v_password;
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->_password);
  __Pyx_DECREF(__pyx_v_self->_password);
  __pyx_v_self->_password = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "dmoj/wbox/_wbox.pyx":187
 *         self._username = username
 *         self._password = password
 *         self._executable = self._dir = u''             # <<<<<<<<<<<<<<
 *         self._inject32 = self._inject64 = None
 *         self._inject_func = None
 */
  __Pyx_INCREF(__pyx_kp_u__7);
  __Pyx_GIVEREF(__pyx_kp_u__7);
  __Pyx_GOTREF(__pyx_v_self->_executable);
  __Pyx_DECREF(__pyx_v_self->_executable);
  __pyx_v_self->_executable = __pyx_kp_u__7;
  __Pyx_INCREF(__pyx_kp_u__7);
  __Pyx_GIVEREF(__pyx_kp_u__7);
  __Pyx_GOTREF(__pyx_v_self->_dir);
  __Pyx_DECREF(__pyx_v_self->_dir);
  __pyx_v_self->_dir = __pyx_kp_u__7;

  /* "dmoj/wbox/_wbox.pyx":188
 *         self._password = password
 *         self._executable = self._dir = u''
 *         self._inject32 = self._inject64 = None             # <<<<<<<<<<<<<<
 *         self._inject_func = None
 *         self._stdin = self._stdout = self._stderr = None
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_inject32);
  __Pyx_DECREF(__pyx_v_self->_inject32);
  __pyx_v_self->_inject32 = ((PyObject*)Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_inject64);
  __Pyx_DECREF(__pyx_v_self->_inject64);
  __pyx_v_self->_inject64 = ((PyObject*)Py_None);

  /* "dmoj/wbox/_wbox.pyx":189
 *         self._executable = self._dir = u''
 *         self._inject32 = self._inject64 = None
 *         self._inject_func = None             # <<<<<<<<<<<<<<
 *         self._stdin = self._stdout = self._stderr = None
 *         self.thisptr.withLogin(username, password)
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_inject_func);
  __Pyx_DECREF(__pyx_v_self->_inject_func);
  __pyx_v_self->_inject_func = ((PyObject*)Py_None);

  /* "dmoj/wbox/_wbox.pyx":190
 *         self._inject32 = self._inject64 = None
 *         self._inject_func = None
 *         self._stdin = self._stdout = self._stderr = None             # <<<<<<<<<<<<<<
 *         self.thisptr.withLogin(username, password)
 * 
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_stdin);
  __Pyx_DECREF(__pyx_v_self->_stdin);
  __pyx_v_self->_stdin = Py_None;
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_stdout);
  __Pyx_DECREF(__pyx_v_self->_stdout);
  __pyx_v_self->_stdout = Py_None;
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_stderr);
  __Pyx_DECREF(__pyx_v_self->_stderr);
  __pyx_v_self->_stderr = Py_None;

  /* "dmoj/wbox/_wbox.pyx":191
 *         self._inject_func = None
 *         self._stdin = self._stdout = self._stderr = None
 *         self.thisptr.withLogin(username, password)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_3 = __Pyx_PyUnicode_AsUnicode(__pyx_v_username); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 191, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyUnicode_AsUnicode(__pyx_v_password); if (unlikely((!__pyx_t_4) && PyErr_Occurred())) __PYX_ERR(0, 191, __pyx_L1_error)
  __pyx_v_self->thisptr->withLogin(__pyx_t_3, __pyx_t_4);

  /* "dmoj/wbox/_wbox.pyx":180
 *     cdef object _stdin, _stdout, _stderr
 * 
 *     def __cinit__(self, username, password):             # <<<<<<<<<<<<<<
 *         self.thisptr = new JobbedProcessManager()
 *         self._time_limit = 0
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":193
 *         self.thisptr.withLogin(username, password)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_2__dealloc__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_2__dealloc__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "dmoj/wbox/_wbox.pyx":194
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def spawn(self):
 */
  delete __pyx_v_self->thisptr;

  /* "dmoj/wbox/_wbox.pyx":193
 *         self.thisptr.withLogin(username, password)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "dmoj/wbox/_wbox.pyx":196
 *         del self.thisptr
 * 
 *     def spawn(self):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             if not self.thisptr.spawn():
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_5spawn(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_5spawn(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("spawn (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_4spawn(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_4spawn(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  __pyx_t_4dmoj_4wbox_5_wbox_HANDLE __pyx_v_stdin;
  __pyx_t_4dmoj_4wbox_5_wbox_HANDLE __pyx_v_stdout;
  __pyx_t_4dmoj_4wbox_5_wbox_HANDLE __pyx_v_stderr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  __Pyx_RefNannySetupContext("spawn", 0);

  /* "dmoj/wbox/_wbox.pyx":197
 * 
 *     def spawn(self):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             if not self.thisptr.spawn():
 *                 with gil:
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "dmoj/wbox/_wbox.pyx":198
 *     def spawn(self):
 *         with nogil:
 *             if not self.thisptr.spawn():             # <<<<<<<<<<<<<<
 *                 with gil:
 *                     return False
 */
        try {
          __pyx_t_1 = __pyx_v_self->thisptr->spawn();
        } catch(...) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          __Pyx_CppExn2PyErr();
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          __PYX_ERR(0, 198, __pyx_L4_error)
        }
        __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
        if (__pyx_t_2) {

          /* "dmoj/wbox/_wbox.pyx":199
 *         with nogil:
 *             if not self.thisptr.spawn():
 *                 with gil:             # <<<<<<<<<<<<<<
 *                     return False
 *         cdef HANDLE stdin, stdout, stderr
 */
          {
              #ifdef WITH_THREAD
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
              #endif
              /*try:*/ {

                /* "dmoj/wbox/_wbox.pyx":200
 *             if not self.thisptr.spawn():
 *                 with gil:
 *                     return False             # <<<<<<<<<<<<<<
 *         cdef HANDLE stdin, stdout, stderr
 *         stdin = self.thisptr.stdIn().detach()
 */
                __Pyx_XDECREF(__pyx_r);
                __Pyx_INCREF(Py_False);
                __pyx_r = Py_False;
                goto __pyx_L7_return;
              }

              /* "dmoj/wbox/_wbox.pyx":199
 *         with nogil:
 *             if not self.thisptr.spawn():
 *                 with gil:             # <<<<<<<<<<<<<<
 *                     return False
 *         cdef HANDLE stdin, stdout, stderr
 */
              /*finally:*/ {
                __pyx_L7_return: {
                  #ifdef WITH_THREAD
                  PyGILState_Release(__pyx_gilstate_save);
                  #endif
                  goto __pyx_L3_return;
                }
              }
          }

          /* "dmoj/wbox/_wbox.pyx":198
 *     def spawn(self):
 *         with nogil:
 *             if not self.thisptr.spawn():             # <<<<<<<<<<<<<<
 *                 with gil:
 *                     return False
 */
        }
      }

      /* "dmoj/wbox/_wbox.pyx":197
 * 
 *     def spawn(self):
 *         with nogil:             # <<<<<<<<<<<<<<
 *             if not self.thisptr.spawn():
 *                 with gil:
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L5;
        }
        __pyx_L3_return: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L0;
        }
        __pyx_L4_error: {
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L1_error;
        }
        __pyx_L5:;
      }
  }

  /* "dmoj/wbox/_wbox.pyx":202
 *                     return False
 *         cdef HANDLE stdin, stdout, stderr
 *         stdin = self.thisptr.stdIn().detach()             # <<<<<<<<<<<<<<
 *         stdout = self.thisptr.stdOut().detach()
 *         stderr = self.thisptr.stdErr().detach()
 */
  __pyx_v_stdin = __pyx_v_self->thisptr->stdIn().detach();

  /* "dmoj/wbox/_wbox.pyx":203
 *         cdef HANDLE stdin, stdout, stderr
 *         stdin = self.thisptr.stdIn().detach()
 *         stdout = self.thisptr.stdOut().detach()             # <<<<<<<<<<<<<<
 *         stderr = self.thisptr.stdErr().detach()
 *         self._stdin = fdopen(open_osfhandle(<unsigned long long> stdin, O_WRONLY), 'w')
 */
  __pyx_v_stdout = __pyx_v_self->thisptr->stdOut().detach();

  /* "dmoj/wbox/_wbox.pyx":204
 *         stdin = self.thisptr.stdIn().detach()
 *         stdout = self.thisptr.stdOut().detach()
 *         stderr = self.thisptr.stdErr().detach()             # <<<<<<<<<<<<<<
 *         self._stdin = fdopen(open_osfhandle(<unsigned long long> stdin, O_WRONLY), 'w')
 *         self._stdout = fdopen(open_osfhandle(<unsigned long long> stdout, O_RDONLY), 'r')
 */
  __pyx_v_stderr = __pyx_v_self->thisptr->stdErr().detach();

  /* "dmoj/wbox/_wbox.pyx":205
 *         stdout = self.thisptr.stdOut().detach()
 *         stderr = self.thisptr.stdErr().detach()
 *         self._stdin = fdopen(open_osfhandle(<unsigned long long> stdin, O_WRONLY), 'w')             # <<<<<<<<<<<<<<
 *         self._stdout = fdopen(open_osfhandle(<unsigned long long> stdout, O_RDONLY), 'r')
 *         self._stderr = fdopen(open_osfhandle(<unsigned long long> stderr, O_RDONLY), 'r')
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_fdopen); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_open_osfhandle); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(((unsigned PY_LONG_LONG)__pyx_v_stdin)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_O_WRONLY); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
      __pyx_t_10 = 1;
    }
  }
  __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (__pyx_t_9) {
    __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_9); __pyx_t_9 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_t_8);
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_11, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_10 = 1;
    }
  }
  __pyx_t_11 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_11, 0+__pyx_t_10, __pyx_t_5);
  __Pyx_INCREF(__pyx_n_s_w);
  __Pyx_GIVEREF(__pyx_n_s_w);
  PyTuple_SET_ITEM(__pyx_t_11, 1+__pyx_t_10, __pyx_n_s_w);
  __pyx_t_5 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_11, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_stdin);
  __Pyx_DECREF(__pyx_v_self->_stdin);
  __pyx_v_self->_stdin = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "dmoj/wbox/_wbox.pyx":206
 *         stderr = self.thisptr.stdErr().detach()
 *         self._stdin = fdopen(open_osfhandle(<unsigned long long> stdin, O_WRONLY), 'w')
 *         self._stdout = fdopen(open_osfhandle(<unsigned long long> stdout, O_RDONLY), 'r')             # <<<<<<<<<<<<<<
 *         self._stderr = fdopen(open_osfhandle(<unsigned long long> stderr, O_RDONLY), 'r')
 * 
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_fdopen); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s_open_osfhandle); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(((unsigned PY_LONG_LONG)__pyx_v_stdout)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_O_RDONLY); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_10 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_7) {
    __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_10, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_10, __pyx_t_8);
  __pyx_t_6 = 0;
  __pyx_t_8 = 0;
  __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_10 = 1;
    }
  }
  __pyx_t_9 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  if (__pyx_t_5) {
    __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_5); __pyx_t_5 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_11);
  PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_10, __pyx_t_11);
  __Pyx_INCREF(__pyx_n_s_r);
  __Pyx_GIVEREF(__pyx_n_s_r);
  PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_10, __pyx_n_s_r);
  __pyx_t_11 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_stdout);
  __Pyx_DECREF(__pyx_v_self->_stdout);
  __pyx_v_self->_stdout = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "dmoj/wbox/_wbox.pyx":207
 *         self._stdin = fdopen(open_osfhandle(<unsigned long long> stdin, O_WRONLY), 'w')
 *         self._stdout = fdopen(open_osfhandle(<unsigned long long> stdout, O_RDONLY), 'r')
 *         self._stderr = fdopen(open_osfhandle(<unsigned long long> stderr, O_RDONLY), 'r')             # <<<<<<<<<<<<<<
 * 
 *     def terminate(self, code):
 */
  __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s_fdopen); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_11 = __Pyx_GetModuleGlobalName(__pyx_n_s_open_osfhandle); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_5 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(((unsigned PY_LONG_LONG)__pyx_v_stderr)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_8 = __Pyx_GetModuleGlobalName(__pyx_n_s_O_RDONLY); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_6 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_11))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_11);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_11, function);
      __pyx_t_10 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_6) {
    __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_10, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_10, __pyx_t_8);
  __pyx_t_5 = 0;
  __pyx_t_8 = 0;
  __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_11, __pyx_t_7, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  __pyx_t_11 = NULL;
  __pyx_t_10 = 0;
  if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_10 = 1;
    }
  }
  __pyx_t_7 = PyTuple_New(2+__pyx_t_10); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (__pyx_t_11) {
    __Pyx_GIVEREF(__pyx_t_11); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_11); __pyx_t_11 = NULL;
  }
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_10, __pyx_t_9);
  __Pyx_INCREF(__pyx_n_s_r);
  __Pyx_GIVEREF(__pyx_n_s_r);
  PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_10, __pyx_n_s_r);
  __pyx_t_9 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_stderr);
  __Pyx_DECREF(__pyx_v_self->_stderr);
  __pyx_v_self->_stderr = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "dmoj/wbox/_wbox.pyx":196
 *         del self.thisptr
 * 
 *     def spawn(self):             # <<<<<<<<<<<<<<
 *         with nogil:
 *             if not self.thisptr.spawn():
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.spawn", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":209
 *         self._stderr = fdopen(open_osfhandle(<unsigned long long> stderr, O_RDONLY), 'r')
 * 
 *     def terminate(self, code):             # <<<<<<<<<<<<<<
 *         return self.thisptr.terminate(code)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7terminate(PyObject *__pyx_v_self, PyObject *__pyx_v_code); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7terminate(PyObject *__pyx_v_self, PyObject *__pyx_v_code) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("terminate (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6terminate(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_code));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6terminate(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_code) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  unsigned int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("terminate", 0);

  /* "dmoj/wbox/_wbox.pyx":210
 * 
 *     def terminate(self, code):
 *         return self.thisptr.terminate(code)             # <<<<<<<<<<<<<<
 * 
 *     def wait(self, timeout=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_As_unsigned_int(__pyx_v_code); if (unlikely((__pyx_t_1 == (unsigned int)-1) && PyErr_Occurred())) __PYX_ERR(0, 210, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_v_self->thisptr->terminate(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 210, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":209
 *         self._stderr = fdopen(open_osfhandle(<unsigned long long> stderr, O_RDONLY), 'r')
 * 
 *     def terminate(self, code):             # <<<<<<<<<<<<<<
 *         return self.thisptr.terminate(code)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.terminate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":212
 *         return self.thisptr.terminate(code)
 * 
 *     def wait(self, timeout=None):             # <<<<<<<<<<<<<<
 *         cdef DWORD time, result
 *         if timeout is not None:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_9wait(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_9wait(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_timeout = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("wait (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_timeout,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_timeout);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "wait") < 0)) __PYX_ERR(0, 212, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_timeout = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("wait", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 212, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.wait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8wait(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), __pyx_v_timeout);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8wait(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_timeout) {
  __pyx_t_4dmoj_4wbox_5_wbox_DWORD __pyx_v_time;
  __pyx_t_4dmoj_4wbox_5_wbox_DWORD __pyx_v_result;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __pyx_t_4dmoj_4wbox_5_wbox_DWORD __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("wait", 0);

  /* "dmoj/wbox/_wbox.pyx":214
 *     def wait(self, timeout=None):
 *         cdef DWORD time, result
 *         if timeout is not None:             # <<<<<<<<<<<<<<
 *             time = timeout
 *         else:
 */
  __pyx_t_1 = (__pyx_v_timeout != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "dmoj/wbox/_wbox.pyx":215
 *         cdef DWORD time, result
 *         if timeout is not None:
 *             time = timeout             # <<<<<<<<<<<<<<
 *         else:
 *             time = INFINITE
 */
    __pyx_t_3 = __Pyx_PyInt_As_unsigned_long(__pyx_v_timeout); if (unlikely((__pyx_t_3 == (unsigned long)-1) && PyErr_Occurred())) __PYX_ERR(0, 215, __pyx_L1_error)
    __pyx_v_time = __pyx_t_3;

    /* "dmoj/wbox/_wbox.pyx":214
 *     def wait(self, timeout=None):
 *         cdef DWORD time, result
 *         if timeout is not None:             # <<<<<<<<<<<<<<
 *             time = timeout
 *         else:
 */
    goto __pyx_L3;
  }

  /* "dmoj/wbox/_wbox.pyx":217
 *             time = timeout
 *         else:
 *             time = INFINITE             # <<<<<<<<<<<<<<
 *         with nogil:
 *             result = WaitForSingleObject(self.thisptr.process().get(), time)
 */
  /*else*/ {
    __pyx_v_time = INFINITE;
  }
  __pyx_L3:;

  /* "dmoj/wbox/_wbox.pyx":218
 *         else:
 *             time = INFINITE
 *         with nogil:             # <<<<<<<<<<<<<<
 *             result = WaitForSingleObject(self.thisptr.process().get(), time)
 *         return result
 */
  {
      #ifdef WITH_THREAD
      PyThreadState *_save;
      Py_UNBLOCK_THREADS
      #endif
      /*try:*/ {

        /* "dmoj/wbox/_wbox.pyx":219
 *             time = INFINITE
 *         with nogil:
 *             result = WaitForSingleObject(self.thisptr.process().get(), time)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
        __pyx_v_result = WaitForSingleObject(__pyx_v_self->thisptr->process().get(), __pyx_v_time);
      }

      /* "dmoj/wbox/_wbox.pyx":218
 *         else:
 *             time = INFINITE
 *         with nogil:             # <<<<<<<<<<<<<<
 *             result = WaitForSingleObject(self.thisptr.process().get(), time)
 *         return result
 */
      /*finally:*/ {
        /*normal exit:*/{
          #ifdef WITH_THREAD
          Py_BLOCK_THREADS
          #endif
          goto __pyx_L6;
        }
        __pyx_L6:;
      }
  }

  /* "dmoj/wbox/_wbox.pyx":220
 *         with nogil:
 *             result = WaitForSingleObject(self.thisptr.process().get(), time)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     def get_exit_code(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __Pyx_PyInt_From_unsigned_long(__pyx_v_result); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":212
 *         return self.thisptr.terminate(code)
 * 
 *     def wait(self, timeout=None):             # <<<<<<<<<<<<<<
 *         cdef DWORD time, result
 *         if timeout is not None:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.wait", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":222
 *         return result
 * 
 *     def get_exit_code(self):             # <<<<<<<<<<<<<<
 *         cdef DWORD code
 *         if WaitForSingleObject(self.thisptr.process().get(), 0) == WAIT_TIMEOUT:
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11get_exit_code(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11get_exit_code(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_exit_code (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10get_exit_code(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10get_exit_code(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  __pyx_t_4dmoj_4wbox_5_wbox_DWORD __pyx_v_code;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("get_exit_code", 0);

  /* "dmoj/wbox/_wbox.pyx":224
 *     def get_exit_code(self):
 *         cdef DWORD code
 *         if WaitForSingleObject(self.thisptr.process().get(), 0) == WAIT_TIMEOUT:             # <<<<<<<<<<<<<<
 *             return None
 *         else:
 */
  __pyx_t_1 = ((WaitForSingleObject(__pyx_v_self->thisptr->process().get(), 0) == WAIT_TIMEOUT) != 0);
  if (__pyx_t_1) {

    /* "dmoj/wbox/_wbox.pyx":225
 *         cdef DWORD code
 *         if WaitForSingleObject(self.thisptr.process().get(), 0) == WAIT_TIMEOUT:
 *             return None             # <<<<<<<<<<<<<<
 *         else:
 *             if not GetExitCodeProcess(self.thisptr.process().get(), &code):
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;

    /* "dmoj/wbox/_wbox.pyx":224
 *     def get_exit_code(self):
 *         cdef DWORD code
 *         if WaitForSingleObject(self.thisptr.process().get(), 0) == WAIT_TIMEOUT:             # <<<<<<<<<<<<<<
 *             return None
 *         else:
 */
  }

  /* "dmoj/wbox/_wbox.pyx":227
 *             return None
 *         else:
 *             if not GetExitCodeProcess(self.thisptr.process().get(), &code):             # <<<<<<<<<<<<<<
 *                 raise WinError()
 *             return code
 */
  /*else*/ {
    __pyx_t_1 = ((!(GetExitCodeProcess(__pyx_v_self->thisptr->process().get(), (&__pyx_v_code)) != 0)) != 0);
    if (__pyx_t_1) {

      /* "dmoj/wbox/_wbox.pyx":228
 *         else:
 *             if not GetExitCodeProcess(self.thisptr.process().get(), &code):
 *                 raise WinError()             # <<<<<<<<<<<<<<
 *             return code
 * 
 */
      __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_WinError); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L1_error)
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_2, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_ERR(0, 228, __pyx_L1_error)

      /* "dmoj/wbox/_wbox.pyx":227
 *             return None
 *         else:
 *             if not GetExitCodeProcess(self.thisptr.process().get(), &code):             # <<<<<<<<<<<<<<
 *                 raise WinError()
 *             return code
 */
    }

    /* "dmoj/wbox/_wbox.pyx":229
 *             if not GetExitCodeProcess(self.thisptr.process().get(), &code):
 *                 raise WinError()
 *             return code             # <<<<<<<<<<<<<<
 * 
 *     def set_environment(self, unicode memory):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyInt_From_unsigned_long(__pyx_v_code); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "dmoj/wbox/_wbox.pyx":222
 *         return result
 * 
 *     def get_exit_code(self):             # <<<<<<<<<<<<<<
 *         cdef DWORD code
 *         if WaitForSingleObject(self.thisptr.process().get(), 0) == WAIT_TIMEOUT:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.get_exit_code", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":231
 *             return code
 * 
 *     def set_environment(self, unicode memory):             # <<<<<<<<<<<<<<
 *         self.thisptr.environment(memory, len(memory) * sizeof(Py_UNICODE))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13set_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_memory); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13set_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_memory) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_environment (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_memory), (&PyUnicode_Type), 1, "memory", 1))) __PYX_ERR(0, 231, __pyx_L1_error)
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12set_environment(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject*)__pyx_v_memory));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12set_environment(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_memory) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  __Pyx_RefNannySetupContext("set_environment", 0);

  /* "dmoj/wbox/_wbox.pyx":232
 * 
 *     def set_environment(self, unicode memory):
 *         self.thisptr.environment(memory, len(memory) * sizeof(Py_UNICODE))             # <<<<<<<<<<<<<<
 * 
 *     def inherit_environment(self):
 */
  __pyx_t_1 = __Pyx_PyUnicode_AsUnicode(__pyx_v_memory); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 232, __pyx_L1_error)
  if (unlikely(__pyx_v_memory == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 232, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyUnicode_GET_LENGTH(__pyx_v_memory); if (unlikely(__pyx_t_2 == -1)) __PYX_ERR(0, 232, __pyx_L1_error)
  __pyx_v_self->thisptr->environment(__pyx_t_1, (__pyx_t_2 * (sizeof(Py_UNICODE))));

  /* "dmoj/wbox/_wbox.pyx":231
 *             return code
 * 
 *     def set_environment(self, unicode memory):             # <<<<<<<<<<<<<<
 *         self.thisptr.environment(memory, len(memory) * sizeof(Py_UNICODE))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.set_environment", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":234
 *         self.thisptr.environment(memory, len(memory) * sizeof(Py_UNICODE))
 * 
 *     def inherit_environment(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.environment(NULL, 0)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_15inherit_environment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_15inherit_environment(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inherit_environment (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_14inherit_environment(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_14inherit_environment(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("inherit_environment", 0);

  /* "dmoj/wbox/_wbox.pyx":235
 * 
 *     def inherit_environment(self):
 *         self.thisptr.environment(NULL, 0)             # <<<<<<<<<<<<<<
 * 
 *     property stdin:
 */
  __pyx_v_self->thisptr->environment(NULL, 0);

  /* "dmoj/wbox/_wbox.pyx":234
 *         self.thisptr.environment(memory, len(memory) * sizeof(Py_UNICODE))
 * 
 *     def inherit_environment(self):             # <<<<<<<<<<<<<<
 *         self.thisptr.environment(NULL, 0)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":238
 * 
 *     property stdin:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._stdin
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_5stdin_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_5stdin_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_5stdin___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_5stdin___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":239
 *     property stdin:
 *         def __get__(self):
 *             return self._stdin             # <<<<<<<<<<<<<<
 * 
 *     property stdout:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_stdin);
  __pyx_r = __pyx_v_self->_stdin;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":238
 * 
 *     property stdin:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._stdin
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":242
 * 
 *     property stdout:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._stdout
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6stdout_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6stdout_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6stdout___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6stdout___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":243
 *     property stdout:
 *         def __get__(self):
 *             return self._stdout             # <<<<<<<<<<<<<<
 * 
 *     property stderr:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_stdout);
  __pyx_r = __pyx_v_self->_stdout;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":242
 * 
 *     property stdout:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._stdout
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":246
 * 
 *     property stderr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._stderr
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6stderr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6stderr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6stderr___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6stderr___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":247
 *     property stderr:
 *         def __get__(self):
 *             return self._stderr             # <<<<<<<<<<<<<<
 * 
 *     property time_limit:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_stderr);
  __pyx_r = __pyx_v_self->_stderr;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":246
 * 
 *     property stderr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._stderr
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":250
 * 
 *     property time_limit:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._time_limit
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":251
 *     property time_limit:
 *         def __get__(self):
 *             return self._time_limit             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->_time_limit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":250
 * 
 *     property time_limit:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._time_limit
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.time_limit.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":253
 *             return self._time_limit
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._time_limit = value
 *             self.thisptr.time(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":254
 * 
 *         def __set__(self, value):
 *             self._time_limit = value             # <<<<<<<<<<<<<<
 *             self.thisptr.time(value)
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 254, __pyx_L1_error)
  __pyx_v_self->_time_limit = __pyx_t_1;

  /* "dmoj/wbox/_wbox.pyx":255
 *         def __set__(self, value):
 *             self._time_limit = value
 *             self.thisptr.time(value)             # <<<<<<<<<<<<<<
 * 
 *     property memory_limit:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 255, __pyx_L1_error)
  __pyx_v_self->thisptr->time(__pyx_t_1);

  /* "dmoj/wbox/_wbox.pyx":253
 *             return self._time_limit
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._time_limit = value
 *             self.thisptr.time(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.time_limit.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":258
 * 
 *     property memory_limit:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._memory_limit
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":259
 *     property memory_limit:
 *         def __get__(self):
 *             return self._memory_limit             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->_memory_limit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":258
 * 
 *     property memory_limit:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._memory_limit
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.memory_limit.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":261
 *             return self._memory_limit
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._memory_limit = value
 *             self.thisptr.memory(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":262
 * 
 *         def __set__(self, value):
 *             self._memory_limit = value             # <<<<<<<<<<<<<<
 *             self.thisptr.memory(value)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_value); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 262, __pyx_L1_error)
  __pyx_v_self->_memory_limit = __pyx_t_1;

  /* "dmoj/wbox/_wbox.pyx":263
 *         def __set__(self, value):
 *             self._memory_limit = value
 *             self.thisptr.memory(value)             # <<<<<<<<<<<<<<
 * 
 *     property process_limit:
 */
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_value); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 263, __pyx_L1_error)
  __pyx_v_self->thisptr->memory(__pyx_t_1);

  /* "dmoj/wbox/_wbox.pyx":261
 *             return self._memory_limit
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._memory_limit = value
 *             self.thisptr.memory(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.memory_limit.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":266
 * 
 *     property process_limit:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._process_limit
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":267
 *     property process_limit:
 *         def __get__(self):
 *             return self._process_limit             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->_process_limit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":266
 * 
 *     property process_limit:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._process_limit
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.process_limit.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":269
 *             return self._process_limit
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._process_limit = value
 *             self.thisptr.processes(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":270
 * 
 *         def __set__(self, value):
 *             self._process_limit = value             # <<<<<<<<<<<<<<
 *             self.thisptr.processes(value)
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L1_error)
  __pyx_v_self->_process_limit = __pyx_t_1;

  /* "dmoj/wbox/_wbox.pyx":271
 *         def __set__(self, value):
 *             self._process_limit = value
 *             self.thisptr.processes(value)             # <<<<<<<<<<<<<<
 * 
 *     property executable:
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 271, __pyx_L1_error)
  __pyx_v_self->thisptr->processes(__pyx_t_1);

  /* "dmoj/wbox/_wbox.pyx":269
 *             return self._process_limit
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._process_limit = value
 *             self.thisptr.processes(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.process_limit.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":274
 * 
 *     property executable:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._executable
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10executable___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10executable___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":275
 *     property executable:
 *         def __get__(self):
 *             return self._executable             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_executable);
  __pyx_r = __pyx_v_self->_executable;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":274
 * 
 *     property executable:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._executable
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":277
 *             return self._executable
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._executable = value
 *             self.thisptr.executable(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":278
 * 
 *         def __set__(self, value):
 *             self._executable = value             # <<<<<<<<<<<<<<
 *             self.thisptr.executable(value)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 278, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_executable);
  __Pyx_DECREF(__pyx_v_self->_executable);
  __pyx_v_self->_executable = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":279
 *         def __set__(self, value):
 *             self._executable = value
 *             self.thisptr.executable(value)             # <<<<<<<<<<<<<<
 * 
 *     property command:
 */
  __pyx_t_2 = __Pyx_PyUnicode_AsUnicode(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_v_self->thisptr->executable(__pyx_t_2);

  /* "dmoj/wbox/_wbox.pyx":277
 *             return self._executable
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._executable = value
 *             self.thisptr.executable(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.executable.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":282
 * 
 *     property command:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._command
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7command_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7command_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7command___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7command___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":283
 *     property command:
 *         def __get__(self):
 *             return self._command             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_command);
  __pyx_r = __pyx_v_self->_command;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":282
 * 
 *     property command:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._command
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":285
 *             return self._command
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._command = value
 *             self.thisptr.command(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7command_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7command_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7command_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7command_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":286
 * 
 *         def __set__(self, value):
 *             self._command = value             # <<<<<<<<<<<<<<
 *             self.thisptr.command(value)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 286, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_command);
  __Pyx_DECREF(__pyx_v_self->_command);
  __pyx_v_self->_command = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":287
 *         def __set__(self, value):
 *             self._command = value
 *             self.thisptr.command(value)             # <<<<<<<<<<<<<<
 * 
 *     property dir:
 */
  __pyx_t_2 = __Pyx_PyUnicode_AsUnicode(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 287, __pyx_L1_error)
  __pyx_v_self->thisptr->command(__pyx_t_2);

  /* "dmoj/wbox/_wbox.pyx":285
 *             return self._command
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._command = value
 *             self.thisptr.command(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.command.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":290
 * 
 *     property dir:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._dir
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3dir___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3dir___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":291
 *     property dir:
 *         def __get__(self):
 *             return self._dir             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_dir);
  __pyx_r = __pyx_v_self->_dir;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":290
 * 
 *     property dir:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._dir
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":293
 *             return self._dir
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._dir = value
 *             self.thisptr.directory(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":294
 * 
 *         def __set__(self, value):
 *             self._dir = value             # <<<<<<<<<<<<<<
 *             self.thisptr.directory(value)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 294, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_dir);
  __Pyx_DECREF(__pyx_v_self->_dir);
  __pyx_v_self->_dir = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":295
 *         def __set__(self, value):
 *             self._dir = value
 *             self.thisptr.directory(value)             # <<<<<<<<<<<<<<
 * 
 *     property inject32:
 */
  __pyx_t_2 = __Pyx_PyUnicode_AsUnicode(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 295, __pyx_L1_error)
  __pyx_v_self->thisptr->directory(__pyx_t_2);

  /* "dmoj/wbox/_wbox.pyx":293
 *             return self._dir
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._dir = value
 *             self.thisptr.directory(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.dir.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":298
 * 
 *     property inject32:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._inject32
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":299
 *     property inject32:
 *         def __get__(self):
 *             return self._inject32             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_inject32);
  __pyx_r = __pyx_v_self->_inject32;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":298
 * 
 *     property inject32:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._inject32
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":301
 *             return self._inject32
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._inject32 = value
 *             self.thisptr.injectX86(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":302
 * 
 *         def __set__(self, value):
 *             self._inject32 = value             # <<<<<<<<<<<<<<
 *             self.thisptr.injectX86(value)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 302, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_inject32);
  __Pyx_DECREF(__pyx_v_self->_inject32);
  __pyx_v_self->_inject32 = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":303
 *         def __set__(self, value):
 *             self._inject32 = value
 *             self.thisptr.injectX86(value)             # <<<<<<<<<<<<<<
 * 
 *     property inject64:
 */
  __pyx_t_2 = __Pyx_PyUnicode_AsUnicode(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 303, __pyx_L1_error)
  __pyx_v_self->thisptr->injectX86(__pyx_t_2);

  /* "dmoj/wbox/_wbox.pyx":301
 *             return self._inject32
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._inject32 = value
 *             self.thisptr.injectX86(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.inject32.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":306
 * 
 *     property inject64:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._inject64
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":307
 *     property inject64:
 *         def __get__(self):
 *             return self._inject64             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_inject64);
  __pyx_r = __pyx_v_self->_inject64;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":306
 * 
 *     property inject64:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._inject64
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":309
 *             return self._inject64
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._inject64 = value
 *             self.thisptr.injectX64(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":310
 * 
 *         def __set__(self, value):
 *             self._inject64 = value             # <<<<<<<<<<<<<<
 *             self.thisptr.injectX64(value)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 310, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_inject64);
  __Pyx_DECREF(__pyx_v_self->_inject64);
  __pyx_v_self->_inject64 = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":311
 *         def __set__(self, value):
 *             self._inject64 = value
 *             self.thisptr.injectX64(value)             # <<<<<<<<<<<<<<
 * 
 *     property inject_func:
 */
  __pyx_t_2 = __Pyx_PyUnicode_AsUnicode(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 311, __pyx_L1_error)
  __pyx_v_self->thisptr->injectX64(__pyx_t_2);

  /* "dmoj/wbox/_wbox.pyx":309
 *             return self._inject64
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._inject64 = value
 *             self.thisptr.injectX64(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.inject64.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":314
 * 
 *     property inject_func:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._inject_func
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":315
 *     property inject_func:
 *         def __get__(self):
 *             return self._inject_func             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_inject_func);
  __pyx_r = __pyx_v_self->_inject_func;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":314
 * 
 *     property inject_func:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._inject_func
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":317
 *             return self._inject_func
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._inject_func = value
 *             self.thisptr.injectFunction(value)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCSTR __pyx_t_2;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":318
 * 
 *         def __set__(self, value):
 *             self._inject_func = value             # <<<<<<<<<<<<<<
 *             self.thisptr.injectFunction(value)
 * 
 */
  if (!(likely(PyString_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 318, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_inject_func);
  __Pyx_DECREF(__pyx_v_self->_inject_func);
  __pyx_v_self->_inject_func = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":319
 *         def __set__(self, value):
 *             self._inject_func = value
 *             self.thisptr.injectFunction(value)             # <<<<<<<<<<<<<<
 * 
 *     property username:
 */
  __pyx_t_2 = __Pyx_PyObject_AsString(__pyx_v_value); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 319, __pyx_L1_error)
  __pyx_v_self->thisptr->injectFunction(__pyx_t_2);

  /* "dmoj/wbox/_wbox.pyx":317
 *             return self._inject_func
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._inject_func = value
 *             self.thisptr.injectFunction(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.inject_func.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":322
 * 
 *     property username:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._username
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8username_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8username_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8username___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8username___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":323
 *     property username:
 *         def __get__(self):
 *             return self._username             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_username);
  __pyx_r = __pyx_v_self->_username;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":322
 * 
 *     property username:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._username
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":325
 *             return self._username
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._username = value
 *             self.thisptr.withLogin(self._username, self._password)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8username_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8username_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8username_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8username_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_2;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_3;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":326
 * 
 *         def __set__(self, value):
 *             self._username = value             # <<<<<<<<<<<<<<
 *             self.thisptr.withLogin(self._username, self._password)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 326, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_username);
  __Pyx_DECREF(__pyx_v_self->_username);
  __pyx_v_self->_username = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":327
 *         def __set__(self, value):
 *             self._username = value
 *             self.thisptr.withLogin(self._username, self._password)             # <<<<<<<<<<<<<<
 * 
 *     property password:
 */
  __pyx_t_2 = __Pyx_PyUnicode_AsUnicode(__pyx_v_self->_username); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 327, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyUnicode_AsUnicode(__pyx_v_self->_password); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 327, __pyx_L1_error)
  __pyx_v_self->thisptr->withLogin(__pyx_t_2, __pyx_t_3);

  /* "dmoj/wbox/_wbox.pyx":325
 *             return self._username
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._username = value
 *             self.thisptr.withLogin(self._username, self._password)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.username.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":330
 * 
 *     property password:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._password
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8password_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8password_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8password___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8password___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":331
 *     property password:
 *         def __get__(self):
 *             return self._password             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_password);
  __pyx_r = __pyx_v_self->_password;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":330
 * 
 *     property password:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._password
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":333
 *             return self._password
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._password = value
 *             self.thisptr.withLogin(self._username, self._password)
 */

/* Python wrapper */
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8password_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8password_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8password_2__set__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_8password_2__set__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_2;
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_3;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "dmoj/wbox/_wbox.pyx":334
 * 
 *         def __set__(self, value):
 *             self._password = value             # <<<<<<<<<<<<<<
 *             self.thisptr.withLogin(self._username, self._password)
 * 
 */
  if (!(likely(PyUnicode_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "unicode", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 334, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_password);
  __Pyx_DECREF(__pyx_v_self->_password);
  __pyx_v_self->_password = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":335
 *         def __set__(self, value):
 *             self._password = value
 *             self.thisptr.withLogin(self._username, self._password)             # <<<<<<<<<<<<<<
 * 
 *     property memory:
 */
  __pyx_t_2 = __Pyx_PyUnicode_AsUnicode(__pyx_v_self->_username); if (unlikely((!__pyx_t_2) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyUnicode_AsUnicode(__pyx_v_self->_password); if (unlikely((!__pyx_t_3) && PyErr_Occurred())) __PYX_ERR(0, 335, __pyx_L1_error)
  __pyx_v_self->thisptr->withLogin(__pyx_t_2, __pyx_t_3);

  /* "dmoj/wbox/_wbox.pyx":333
 *             return self._password
 * 
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self._password = value
 *             self.thisptr.withLogin(self._username, self._password)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.password.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":338
 * 
 *     property memory:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.memory()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6memory_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6memory_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6memory___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_6memory___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":339
 *     property memory:
 *         def __get__(self):
 *             return self.thisptr.memory()             # <<<<<<<<<<<<<<
 * 
 *     property mle:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(__pyx_v_self->thisptr->memory()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":338
 * 
 *     property memory:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.memory()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.memory.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":342
 * 
 *     property mle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mle()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3mle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3mle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3mle___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3mle___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":343
 *     property mle:
 *         def __get__(self):
 *             return self.thisptr.mle()             # <<<<<<<<<<<<<<
 * 
 *     property execution_time:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->thisptr->mle()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":342
 * 
 *     property mle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.mle()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.mle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":346
 * 
 *     property execution_time:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.executionTime()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_14execution_time_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_14execution_time_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_14execution_time___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_14execution_time___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":347
 *     property execution_time:
 *         def __get__(self):
 *             return self.thisptr.executionTime()             # <<<<<<<<<<<<<<
 * 
 *     property tle:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->thisptr->executionTime()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":346
 * 
 *     property execution_time:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.executionTime()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.execution_time.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":350
 * 
 *     property tle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.tle()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3tle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3tle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3tle___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_3tle___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":351
 *     property tle:
 *         def __get__(self):
 *             return self.thisptr.tle()             # <<<<<<<<<<<<<<
 * 
 *     property _handle:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->thisptr->tle()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":350
 * 
 *     property tle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.thisptr.tle()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager.tle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":354
 * 
 *     property _handle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return <unsigned long long> self.thisptr.process().get()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7_handle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7_handle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7_handle___get__(((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_14ProcessManager_7_handle___get__(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "dmoj/wbox/_wbox.pyx":355
 *     property _handle:
 *         def __get__(self):
 *             return <unsigned long long> self.thisptr.process().get()             # <<<<<<<<<<<<<<
 * 
 * cpdef update_address_x86(unicode executable):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_unsigned_PY_LONG_LONG(((unsigned PY_LONG_LONG)__pyx_v_self->thisptr->process().get())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "dmoj/wbox/_wbox.pyx":354
 * 
 *     property _handle:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return <unsigned long long> self.thisptr.process().get()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.ProcessManager._handle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":357
 *             return <unsigned long long> self.thisptr.process().get()
 * 
 * cpdef update_address_x86(unicode executable):             # <<<<<<<<<<<<<<
 *     JobbedProcessManager.updateAsmX86(executable)
 * 
 */

static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_1update_address_x86(PyObject *__pyx_self, PyObject *__pyx_v_executable); /*proto*/
static PyObject *__pyx_f_4dmoj_4wbox_5_wbox_update_address_x86(PyObject *__pyx_v_executable, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_1;
  __Pyx_RefNannySetupContext("update_address_x86", 0);

  /* "dmoj/wbox/_wbox.pyx":358
 * 
 * cpdef update_address_x86(unicode executable):
 *     JobbedProcessManager.updateAsmX86(executable)             # <<<<<<<<<<<<<<
 * 
 * cpdef update_address_x64(unicode executable):
 */
  __pyx_t_1 = __Pyx_PyUnicode_AsUnicode(__pyx_v_executable); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 358, __pyx_L1_error)
  JobbedProcessManager::updateAsmX86(__pyx_t_1);

  /* "dmoj/wbox/_wbox.pyx":357
 *             return <unsigned long long> self.thisptr.process().get()
 * 
 * cpdef update_address_x86(unicode executable):             # <<<<<<<<<<<<<<
 *     JobbedProcessManager.updateAsmX86(executable)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.update_address_x86", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_1update_address_x86(PyObject *__pyx_self, PyObject *__pyx_v_executable); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_1update_address_x86(PyObject *__pyx_self, PyObject *__pyx_v_executable) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_address_x86 (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_executable), (&PyUnicode_Type), 1, "executable", 1))) __PYX_ERR(0, 357, __pyx_L1_error)
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_update_address_x86(__pyx_self, ((PyObject*)__pyx_v_executable));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_update_address_x86(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_executable) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("update_address_x86", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4dmoj_4wbox_5_wbox_update_address_x86(__pyx_v_executable, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.update_address_x86", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "dmoj/wbox/_wbox.pyx":360
 *     JobbedProcessManager.updateAsmX86(executable)
 * 
 * cpdef update_address_x64(unicode executable):             # <<<<<<<<<<<<<<
 *     JobbedProcessManager.updateAsmX64(executable)
 */

static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_3update_address_x64(PyObject *__pyx_self, PyObject *__pyx_v_executable); /*proto*/
static PyObject *__pyx_f_4dmoj_4wbox_5_wbox_update_address_x64(PyObject *__pyx_v_executable, CYTHON_UNUSED int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_4dmoj_4wbox_5_wbox_LPCWSTR __pyx_t_1;
  __Pyx_RefNannySetupContext("update_address_x64", 0);

  /* "dmoj/wbox/_wbox.pyx":361
 * 
 * cpdef update_address_x64(unicode executable):
 *     JobbedProcessManager.updateAsmX64(executable)             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyUnicode_AsUnicode(__pyx_v_executable); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) __PYX_ERR(0, 361, __pyx_L1_error)
  JobbedProcessManager::updateAsmX64(__pyx_t_1);

  /* "dmoj/wbox/_wbox.pyx":360
 *     JobbedProcessManager.updateAsmX86(executable)
 * 
 * cpdef update_address_x64(unicode executable):             # <<<<<<<<<<<<<<
 *     JobbedProcessManager.updateAsmX64(executable)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("dmoj.wbox._wbox.update_address_x64", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_3update_address_x64(PyObject *__pyx_self, PyObject *__pyx_v_executable); /*proto*/
static PyObject *__pyx_pw_4dmoj_4wbox_5_wbox_3update_address_x64(PyObject *__pyx_self, PyObject *__pyx_v_executable) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_address_x64 (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_executable), (&PyUnicode_Type), 1, "executable", 1))) __PYX_ERR(0, 360, __pyx_L1_error)
  __pyx_r = __pyx_pf_4dmoj_4wbox_5_wbox_2update_address_x64(__pyx_self, ((PyObject*)__pyx_v_executable));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_4dmoj_4wbox_5_wbox_2update_address_x64(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_executable) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("update_address_x64", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_4dmoj_4wbox_5_wbox_update_address_x64(__pyx_v_executable, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("dmoj.wbox._wbox.update_address_x64", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_4dmoj_4wbox_5_wbox_UserManager(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4dmoj_4wbox_5_wbox_UserManager(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_11UserManager_username(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_8username_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_11UserManager_password(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_8password_1__get__(o);
}

static PyMethodDef __pyx_methods_4dmoj_4wbox_5_wbox_UserManager[] = {
  {"dispose", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_5dispose, METH_NOARGS, 0},
  {"__enter__", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_7__enter__, METH_NOARGS, 0},
  {"__exit__", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_11UserManager_9__exit__, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4dmoj_4wbox_5_wbox_UserManager[] = {
  {(char *)"username", __pyx_getprop_4dmoj_4wbox_5_wbox_11UserManager_username, 0, (char *)0, 0},
  {(char *)"password", __pyx_getprop_4dmoj_4wbox_5_wbox_11UserManager_password, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4dmoj_4wbox_5_wbox_UserManager = {
  PyVarObject_HEAD_INIT(0, 0)
  "dmoj.wbox._wbox.UserManager", /*tp_name*/
  sizeof(struct __pyx_obj_4dmoj_4wbox_5_wbox_UserManager), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4dmoj_4wbox_5_wbox_UserManager, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4dmoj_4wbox_5_wbox_UserManager, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4dmoj_4wbox_5_wbox_UserManager, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4dmoj_4wbox_5_wbox_UserManager, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4dmoj_4wbox_5_wbox_NetworkManager(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)o);
  p->_name = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_executable = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4dmoj_4wbox_5_wbox_NetworkManager(PyObject *o) {
  struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *p = (struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_name);
  Py_CLEAR(p->_executable);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14NetworkManager_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_4name_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14NetworkManager_executable(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_10executable_1__get__(o);
}

static PyMethodDef __pyx_methods_4dmoj_4wbox_5_wbox_NetworkManager[] = {
  {"dispose", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_5dispose, METH_NOARGS, 0},
  {"__enter__", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_7__enter__, METH_NOARGS, 0},
  {"__exit__", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14NetworkManager_9__exit__, METH_VARARGS|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4dmoj_4wbox_5_wbox_NetworkManager[] = {
  {(char *)"name", __pyx_getprop_4dmoj_4wbox_5_wbox_14NetworkManager_name, 0, (char *)0, 0},
  {(char *)"executable", __pyx_getprop_4dmoj_4wbox_5_wbox_14NetworkManager_executable, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4dmoj_4wbox_5_wbox_NetworkManager = {
  PyVarObject_HEAD_INIT(0, 0)
  "dmoj.wbox._wbox.NetworkManager", /*tp_name*/
  sizeof(struct __pyx_obj_4dmoj_4wbox_5_wbox_NetworkManager), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4dmoj_4wbox_5_wbox_NetworkManager, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4dmoj_4wbox_5_wbox_NetworkManager, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4dmoj_4wbox_5_wbox_NetworkManager, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4dmoj_4wbox_5_wbox_NetworkManager, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyObject *__pyx_tp_new_4dmoj_4wbox_5_wbox_ProcessManager(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)o);
  p->_username = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_password = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_executable = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_command = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_dir = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_inject32 = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_inject64 = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_inject_func = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_stdin = Py_None; Py_INCREF(Py_None);
  p->_stdout = Py_None; Py_INCREF(Py_None);
  p->_stderr = Py_None; Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_4dmoj_4wbox_5_wbox_ProcessManager(PyObject *o) {
  struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *p = (struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)o;
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_username);
  Py_CLEAR(p->_password);
  Py_CLEAR(p->_executable);
  Py_CLEAR(p->_command);
  Py_CLEAR(p->_dir);
  Py_CLEAR(p->_inject32);
  Py_CLEAR(p->_inject64);
  Py_CLEAR(p->_inject_func);
  Py_CLEAR(p->_stdin);
  Py_CLEAR(p->_stdout);
  Py_CLEAR(p->_stderr);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_4dmoj_4wbox_5_wbox_ProcessManager(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *p = (struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)o;
  if (p->_stdin) {
    e = (*v)(p->_stdin, a); if (e) return e;
  }
  if (p->_stdout) {
    e = (*v)(p->_stdout, a); if (e) return e;
  }
  if (p->_stderr) {
    e = (*v)(p->_stderr, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_4dmoj_4wbox_5_wbox_ProcessManager(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *p = (struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager *)o;
  tmp = ((PyObject*)p->_stdin);
  p->_stdin = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_stdout);
  p->_stdout = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_stderr);
  p->_stderr = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_stdin(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_5stdin_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_stdout(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6stdout_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_stderr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6stderr_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_time_limit(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_time_limit(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10time_limit_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_memory_limit(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_memory_limit(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_12memory_limit_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_process_limit(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_process_limit(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13process_limit_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_executable(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_executable(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_10executable_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_command(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7command_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_command(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7command_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_dir(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_dir(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3dir_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject32(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject32(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject32_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject64(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject64(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8inject64_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject_func(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject_func(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11inject_func_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_username(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8username_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_username(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8username_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_password(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8password_1__get__(o);
}

static int __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_password(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_8password_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_memory(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_6memory_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_mle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3mle_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_execution_time(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_14execution_time_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_tle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_3tle_1__get__(o);
}

static PyObject *__pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager__handle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7_handle_1__get__(o);
}

static PyMethodDef __pyx_methods_4dmoj_4wbox_5_wbox_ProcessManager[] = {
  {"spawn", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_5spawn, METH_NOARGS, 0},
  {"terminate", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_7terminate, METH_O, 0},
  {"wait", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_9wait, METH_VARARGS|METH_KEYWORDS, 0},
  {"get_exit_code", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_11get_exit_code, METH_NOARGS, 0},
  {"set_environment", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_13set_environment, METH_O, 0},
  {"inherit_environment", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_14ProcessManager_15inherit_environment, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_4dmoj_4wbox_5_wbox_ProcessManager[] = {
  {(char *)"stdin", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_stdin, 0, (char *)0, 0},
  {(char *)"stdout", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_stdout, 0, (char *)0, 0},
  {(char *)"stderr", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_stderr, 0, (char *)0, 0},
  {(char *)"time_limit", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_time_limit, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_time_limit, (char *)0, 0},
  {(char *)"memory_limit", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_memory_limit, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_memory_limit, (char *)0, 0},
  {(char *)"process_limit", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_process_limit, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_process_limit, (char *)0, 0},
  {(char *)"executable", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_executable, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_executable, (char *)0, 0},
  {(char *)"command", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_command, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_command, (char *)0, 0},
  {(char *)"dir", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_dir, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_dir, (char *)0, 0},
  {(char *)"inject32", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject32, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject32, (char *)0, 0},
  {(char *)"inject64", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject64, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject64, (char *)0, 0},
  {(char *)"inject_func", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject_func, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_inject_func, (char *)0, 0},
  {(char *)"username", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_username, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_username, (char *)0, 0},
  {(char *)"password", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_password, __pyx_setprop_4dmoj_4wbox_5_wbox_14ProcessManager_password, (char *)0, 0},
  {(char *)"memory", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_memory, 0, (char *)0, 0},
  {(char *)"mle", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_mle, 0, (char *)0, 0},
  {(char *)"execution_time", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_execution_time, 0, (char *)0, 0},
  {(char *)"tle", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager_tle, 0, (char *)0, 0},
  {(char *)"_handle", __pyx_getprop_4dmoj_4wbox_5_wbox_14ProcessManager__handle, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_4dmoj_4wbox_5_wbox_ProcessManager = {
  PyVarObject_HEAD_INIT(0, 0)
  "dmoj.wbox._wbox.ProcessManager", /*tp_name*/
  sizeof(struct __pyx_obj_4dmoj_4wbox_5_wbox_ProcessManager), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_4dmoj_4wbox_5_wbox_ProcessManager, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_4dmoj_4wbox_5_wbox_ProcessManager, /*tp_traverse*/
  __pyx_tp_clear_4dmoj_4wbox_5_wbox_ProcessManager, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_4dmoj_4wbox_5_wbox_ProcessManager, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_4dmoj_4wbox_5_wbox_ProcessManager, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_4dmoj_4wbox_5_wbox_ProcessManager, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {"update_address_x86", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_1update_address_x86, METH_O, 0},
  {"update_address_x64", (PyCFunction)__pyx_pw_4dmoj_4wbox_5_wbox_3update_address_x64, METH_O, 0},
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "_wbox",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_n_s_O_RDONLY, __pyx_k_O_RDONLY, sizeof(__pyx_k_O_RDONLY), 0, 0, 1, 1},
  {&__pyx_n_s_O_WRONLY, __pyx_k_O_WRONLY, sizeof(__pyx_k_O_WRONLY), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_WinError, __pyx_k_WinError, sizeof(__pyx_k_WinError), 0, 0, 1, 1},
  {&__pyx_kp_u__7, __pyx_k__7, sizeof(__pyx_k__7), 0, 1, 0, 0},
  {&__pyx_kp_s_already_destroyed, __pyx_k_already_destroyed, sizeof(__pyx_k_already_destroyed), 0, 0, 1, 0},
  {&__pyx_n_s_ctypes, __pyx_k_ctypes, sizeof(__pyx_k_ctypes), 0, 0, 1, 1},
  {&__pyx_n_s_decode, __pyx_k_decode, sizeof(__pyx_k_decode), 0, 0, 1, 1},
  {&__pyx_n_s_dispose, __pyx_k_dispose, sizeof(__pyx_k_dispose), 0, 0, 1, 1},
  {&__pyx_n_s_exc_tb, __pyx_k_exc_tb, sizeof(__pyx_k_exc_tb), 0, 0, 1, 1},
  {&__pyx_n_s_exc_type, __pyx_k_exc_type, sizeof(__pyx_k_exc_type), 0, 0, 1, 1},
  {&__pyx_n_s_exc_val, __pyx_k_exc_val, sizeof(__pyx_k_exc_val), 0, 0, 1, 1},
  {&__pyx_n_s_executable, __pyx_k_executable, sizeof(__pyx_k_executable), 0, 0, 1, 1},
  {&__pyx_n_s_fdopen, __pyx_k_fdopen, sizeof(__pyx_k_fdopen), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_mbcs, __pyx_k_mbcs, sizeof(__pyx_k_mbcs), 0, 0, 1, 1},
  {&__pyx_n_s_msvcrt, __pyx_k_msvcrt, sizeof(__pyx_k_msvcrt), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_open_osfhandle, __pyx_k_open_osfhandle, sizeof(__pyx_k_open_osfhandle), 0, 0, 1, 1},
  {&__pyx_n_s_os, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},
  {&__pyx_n_s_password, __pyx_k_password, sizeof(__pyx_k_password), 0, 0, 1, 1},
  {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_timeout, __pyx_k_timeout, sizeof(__pyx_k_timeout), 0, 0, 1, 1},
  {&__pyx_n_s_username, __pyx_k_username, sizeof(__pyx_k_username), 0, 0, 1, 1},
  {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 116, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "dmoj/wbox/_wbox.pyx":116
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self.thisptr.username()
 * 
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_s_already_destroyed); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "dmoj/wbox/_wbox.pyx":122
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self.thisptr.password()
 * 
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_already_destroyed); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "dmoj/wbox/_wbox.pyx":131
 *     def __cinit__(self, name, executable):
 *         if not isinstance(name, unicode):
 *             name = name.decode('mbcs')             # <<<<<<<<<<<<<<
 *         if not isinstance(executable, unicode):
 *             executable = executable.decode('mbcs')
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_n_s_mbcs); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "dmoj/wbox/_wbox.pyx":133
 *             name = name.decode('mbcs')
 *         if not isinstance(executable, unicode):
 *             executable = executable.decode('mbcs')             # <<<<<<<<<<<<<<
 *         self._name = name
 *         self._executable = executable
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_n_s_mbcs); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "dmoj/wbox/_wbox.pyx":156
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self._name
 * 
 */
  __pyx_tuple__5 = PyTuple_Pack(1, __pyx_kp_s_already_destroyed); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "dmoj/wbox/_wbox.pyx":162
 *         def __get__(self):
 *             if not self.thisptr:
 *                 raise ValueError('already destroyed')             # <<<<<<<<<<<<<<
 *             return self._executable
 * 
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_already_destroyed); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC init_wbox(void); /*proto*/
PyMODINIT_FUNC init_wbox(void)
#else
PyMODINIT_FUNC PyInit__wbox(void); /*proto*/
PyMODINIT_FUNC PyInit__wbox(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit__wbox(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("_wbox", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_dmoj__wbox___wbox) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "dmoj.wbox._wbox")) {
      if (unlikely(PyDict_SetItemString(modules, "dmoj.wbox._wbox", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_4dmoj_4wbox_5_wbox_UserManager) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __pyx_type_4dmoj_4wbox_5_wbox_UserManager.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "UserManager", (PyObject *)&__pyx_type_4dmoj_4wbox_5_wbox_UserManager) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __pyx_ptype_4dmoj_4wbox_5_wbox_UserManager = &__pyx_type_4dmoj_4wbox_5_wbox_UserManager;
  if (PyType_Ready(&__pyx_type_4dmoj_4wbox_5_wbox_NetworkManager) < 0) __PYX_ERR(0, 125, __pyx_L1_error)
  __pyx_type_4dmoj_4wbox_5_wbox_NetworkManager.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "NetworkManager", (PyObject *)&__pyx_type_4dmoj_4wbox_5_wbox_NetworkManager) < 0) __PYX_ERR(0, 125, __pyx_L1_error)
  __pyx_ptype_4dmoj_4wbox_5_wbox_NetworkManager = &__pyx_type_4dmoj_4wbox_5_wbox_NetworkManager;
  if (PyType_Ready(&__pyx_type_4dmoj_4wbox_5_wbox_ProcessManager) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  __pyx_type_4dmoj_4wbox_5_wbox_ProcessManager.tp_print = 0;
  if (PyObject_SetAttrString(__pyx_m, "ProcessManager", (PyObject *)&__pyx_type_4dmoj_4wbox_5_wbox_ProcessManager) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  __pyx_ptype_4dmoj_4wbox_5_wbox_ProcessManager = &__pyx_type_4dmoj_4wbox_5_wbox_ProcessManager;
  /*--- Type import code ---*/
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "dmoj/wbox/_wbox.pyx":1
 * from ctypes import WinError             # <<<<<<<<<<<<<<
 * from os import fdopen, O_RDONLY, O_WRONLY
 * from msvcrt import open_osfhandle
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_WinError);
  __Pyx_GIVEREF(__pyx_n_s_WinError);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_WinError);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_ctypes, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_WinError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WinError, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "dmoj/wbox/_wbox.pyx":2
 * from ctypes import WinError
 * from os import fdopen, O_RDONLY, O_WRONLY             # <<<<<<<<<<<<<<
 * from msvcrt import open_osfhandle
 * 
 */
  __pyx_t_2 = PyList_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_fdopen);
  __Pyx_GIVEREF(__pyx_n_s_fdopen);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_fdopen);
  __Pyx_INCREF(__pyx_n_s_O_RDONLY);
  __Pyx_GIVEREF(__pyx_n_s_O_RDONLY);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_O_RDONLY);
  __Pyx_INCREF(__pyx_n_s_O_WRONLY);
  __Pyx_GIVEREF(__pyx_n_s_O_WRONLY);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_O_WRONLY);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_os, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_fdopen); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fdopen, __pyx_t_2) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_O_RDONLY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_O_RDONLY, __pyx_t_2) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_O_WRONLY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_O_WRONLY, __pyx_t_2) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "dmoj/wbox/_wbox.pyx":3
 * from ctypes import WinError
 * from os import fdopen, O_RDONLY, O_WRONLY
 * from msvcrt import open_osfhandle             # <<<<<<<<<<<<<<
 * 
 * ctypedef const Py_UNICODE *LPCWSTR
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_open_osfhandle);
  __Pyx_GIVEREF(__pyx_n_s_open_osfhandle);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_open_osfhandle);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_msvcrt, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_open_osfhandle); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_open_osfhandle, __pyx_t_1) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "dmoj/wbox/_wbox.pyx":1
 * from ctypes import WinError             # <<<<<<<<<<<<<<
 * from os import fdopen, O_RDONLY, O_WRONLY
 * from msvcrt import open_osfhandle
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init dmoj.wbox._wbox", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init dmoj.wbox._wbox");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCallNoArg */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyErrFetchRestore */
    #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
    #if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* GetModuleGlobalName */
      static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

/* ArgTypeTest */
        static void __Pyx_RaiseArgumentTypeInvalid(const char* name, PyObject *obj, PyTypeObject *type) {
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
}
static CYTHON_INLINE int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (likely(Py_TYPE(obj) == type)) return 1;
        #if PY_MAJOR_VERSION == 2
        else if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(PyObject_TypeCheck(obj, type))) return 1;
    }
    __Pyx_RaiseArgumentTypeInvalid(name, obj, type);
    return 0;
}

/* Import */
        static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
        static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CodeObjectCache */
        static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
        #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_PY_LONG_LONG(unsigned PY_LONG_LONG value) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG) -1, const_zero = (unsigned PY_LONG_LONG) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned PY_LONG_LONG) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(unsigned PY_LONG_LONG) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned PY_LONG_LONG) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned PY_LONG_LONG),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
        #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_unsigned_long(unsigned long value) {
    const unsigned long neg_one = (unsigned long) -1, const_zero = (unsigned long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(unsigned long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(unsigned long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(unsigned long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(unsigned long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(unsigned long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE unsigned int __Pyx_PyInt_As_unsigned_int(PyObject *x) {
    const unsigned int neg_one = (unsigned int) -1, const_zero = (unsigned int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 2 * PyLong_SHIFT) {
                            return (unsigned int) (((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 3 * PyLong_SHIFT) {
                            return (unsigned int) (((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) >= 4 * PyLong_SHIFT) {
                            return (unsigned int) (((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(unsigned int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned int) ((((((unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) (((unsigned int)-1)*(((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned int) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned int) ((((((((((unsigned int)digits[3]) << PyLong_SHIFT) | (unsigned int)digits[2]) << PyLong_SHIFT) | (unsigned int)digits[1]) << PyLong_SHIFT) | (unsigned int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, long, PyLong_AsLong(x))
            } else if (sizeof(unsigned int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned int) -1;
        }
    } else {
        unsigned int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned int) -1;
        val = __Pyx_PyInt_As_unsigned_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned int");
    return (unsigned int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned int");
    return (unsigned int) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE unsigned long __Pyx_PyInt_As_unsigned_long(PyObject *x) {
    const unsigned long neg_one = (unsigned long) -1, const_zero = (unsigned long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(unsigned long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(unsigned long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (unsigned long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(unsigned long, digit, digits[0])
                case 2:
                    if (8 * sizeof(unsigned long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) >= 2 * PyLong_SHIFT) {
                            return (unsigned long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) >= 3 * PyLong_SHIFT) {
                            return (unsigned long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) >= 4 * PyLong_SHIFT) {
                            return (unsigned long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (unsigned long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(unsigned long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(unsigned long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (unsigned long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(unsigned long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(unsigned long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(unsigned long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned long) (((unsigned long)-1)*(((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(unsigned long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) - 1 > 2 * PyLong_SHIFT) {
                            return (unsigned long) ((((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(unsigned long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned long) (((unsigned long)-1)*(((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) - 1 > 3 * PyLong_SHIFT) {
                            return (unsigned long) ((((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(unsigned long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned long) (((unsigned long)-1)*(((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(unsigned long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(unsigned long) - 1 > 4 * PyLong_SHIFT) {
                            return (unsigned long) ((((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(unsigned long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned long, long, PyLong_AsLong(x))
            } else if (sizeof(unsigned long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(unsigned long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            unsigned long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (unsigned long) -1;
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (unsigned long) -1;
        val = __Pyx_PyInt_As_unsigned_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to unsigned long");
    return (unsigned long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to unsigned long");
    return (unsigned long) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CheckBinaryVersion */
        static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
        static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if CYTHON_COMPILING_IN_CPYTHON && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return __Pyx_NewRef(x);
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(x);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
